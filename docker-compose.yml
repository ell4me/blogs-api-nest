version: '3.7'

services:
  elasticsearch:
    image: elasticsearch:8.18.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.18.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:8.18.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch

  filebeat:
    image: elastic/filebeat:8.18.1
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/app/logs:ro
    depends_on:
      - elasticsearch

# НЕ БУДЕТ РАБОТАТЬ ТАК ЧТЕНИЕ ЛОГОВ НЕ ВОЗМОЖНО ЛОКАЛЬНО, ИЗ-ЗА ИЗОЛИРОВАННОСТИ КОНТЕЙНЕРОВ, ЛОГОВ И ТД
# ПОЭТОМУ БУДЕТ ЧИТАТЬ ЛОГИ С ФАЙЛА В КОТОРЫЙ САМИ ЖЕ И БУДЕМ ПИСАТЬ
#  filebeat-logstash:
#    image: elastic/filebeat:8.18.1
#    container_name: filebeat-logstash
#    user: root
#    volumes:
#      - ./filebeat-logstash.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - logstash
#
#  filebeat-elastic:
#    image: elastic/filebeat:8.18.1
#    container_name: filebeat-elastic
#    user: root
#    volumes:
#      - ./filebeat-elastic.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - elasticsearch

  # нельзя добавлять два output, поэтому 2 разных конфига filebeat один напрямую пишет в elastic, другой в logstash(просто для примера, что можно так и так)

  metricbeat:
    image: elastic/metricbeat:8.18.1
    container_name: metricbeat
    user: root
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro # ro - read-only
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch

  pg:
    image: postgres
    container_name: pg
    environment:
      - POSTGRES_DB=${PG_DB:-blog_db}
      - POSTGRES_USER=${PG_USER:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWORD:-admin}
    restart: always
    ports:
      - '5432:5432'

  pgAdmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=test@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      - pg

  mongodb:
    container_name: mongodb
    image: mongo:6.0.2
    restart: always
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASS:-password}
      - MONGO_INITDB_DATABASE=${DB_NAME:-blog_db}

  blog:
    container_name: blogs-api-nest
    volumes:
      - '.:/app'
      - '/app/node_modules'
      - './logs:/app/logs'
    build: .
    restart: always
    ports:
      - '4000:4000'
      - '9229:9229'
    environment:
      - PORT=4000
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=blog_db
      - DB_HOST=mongodb://mongodb:27017
      - INCLUDE_TESTING_MODULE=true
      - JWT_SECRET=cat
      - LOGIN=admin
      - PASSWORD=qwerty
      - JWT_REFRESH_SECRET=dog
      - TTL_RATE_LIMIT=10
      - NUMBER_RATE_LIMIT=5
      - PG_DB=blog_db
      - PG_USER=postgres
      - PG_PASSWORD=admin
      - PG_PORT=5432
      - PG_HOST=pg
      - NODE_ENV=development
    depends_on:
      - mongodb
      - pg

volumes:
  esdata: